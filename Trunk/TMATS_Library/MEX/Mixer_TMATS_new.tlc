%% File : Compressor_TMATS_new.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for Mixer_TMATS_new
%%
%implements Mixer_TMATS_new "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
    %%
    %% The Target Language must be C
    %if ::GenCPP==1
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("types_TMATS.h")>

    %<SLibAddToStaticSources("Mixer_TMATS_body.c")>

    %openfile forwardDecls
        extern void Mixer_TMATS_body(double*, const double*, const MixStruct*);
        MixStruct mixPrms;
    %closefile forwardDecls

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Definitions", forwardDecls)>

%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
    %%
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
    %%
    mixPrms.Aphy1In                   = %<LibBlockParameter(Aphy1In,"","",0)>;
    mixPrms.Aphy2In                   = %<LibBlockParameter(Aphy2In,"","",0)>;
    mixPrms.s_M_Imp1                  = %<LibBlockParameter(s_M_Imp1,"","",0)>;
    mixPrms.s_M_Imp2                  = %<LibBlockParameter(s_M_Imp2,"","",0)>;
    mixPrms.s_M_V1                    = %<LibBlockParameter(s_M_V1,"","",0)>;
    mixPrms.s_M_V2                    = %<LibBlockParameter(s_M_V2,"","",0)>;
    mixPrms.BPRdes                    = %<LibBlockParameter(BPRdes,"","",0)>;
    mixPrms.IDes                      = %<LibBlockParameter(IDes,"","",0)>;
    mixPrms.SWPS                      = %<LibBlockParameter(SWPS,"","",0)>;
    mixPrms.MNp                       = %<LibBlockParameter(MNp,"","",0)>;
    mixPrms.Y_M_FARVec		  = (double*)(%<LibBlockParameterBaseAddr(Y_M_FARVec)>);
    mixPrms.X_M_TVec          = (double*)(%<LibBlockParameterBaseAddr(X_M_TVec)>);
    mixPrms.T_M_RtArray       = (double*)(%<LibBlockParameterBaseAddr(T_M_RtArray)>);
    mixPrms.T_M_gammaArray    = (double*)(%<LibBlockParameterBaseAddr(T_M_gammaArray)>);
    mixPrms.Y_M_FARVecLen  = %<LibBlockParameterSize(Y_M_FARVec)[1]>;
    mixPrms.X_M_TVecLen    = %<LibBlockParameterSize(X_M_TVec)[1]>;

    %assign u_ptr             = LibBlockInputSignalAddr(0, "", "", 0)
    %assign u_dataType        = LibBlockInputSignalDataTypeName(0,"")
    %assign y_ptr             = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y_dataType        = LibBlockOutputSignalDataTypeName(0,"")

    Compressor_TMATS_body((%<y_dataType>*)%<y_ptr>,\ 				  
                          (%<u_dataType>*) %<u_ptr>,\
                          &compPrms);
%endfunction

%% [EOF]
